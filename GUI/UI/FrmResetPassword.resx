<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0ALkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2SiiigAooooAKKKKACiiigBGYIpZiFVRkknAAryjxj8bbewlk
        s/DUUd5Kp2tdyZ8oH/ZA5b65A9Misr4yeP3muZPDelylYYzi9kU/fb/nn9B39Tx2OfIqAOg1bx74l1ve
        L7WLoxvwYo38tCPTauAfxrn+tFFAGppnifW9GwNN1W8tkBzsSZgv/fPSu+8M/HHVLOZIvEMKX1sThpok
        CTL74GFb6YH1ry2igD6+0rVrLW9OivtNuEuLaYZR1/kR1BHcHkVcr5r+GPjiTwlrqw3Uh/sq7YLOpPEZ
        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
</value>
  </data>
</root>